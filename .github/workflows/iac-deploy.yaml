name: Deploy for Products

on:
  push:
    branches: [ deploy/* ]


# MODIFY THIS VARIABLE - 여기에 있는 변수를 고치세요 !!!!
env :
  prefix :              #
  product :             #{product name}
  env :                 #{environment is only allowed as 'prod' or 'dev'}
# MODIFY THIS VARIABLE - 여기에 있는 변수를 고치세요 !!!!

defaults:
  run:
    working-directory: terraform-iac

jobs:
  plan:
    runs-on: ${{ vars.RUNNER_LABEL }}
    environment: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: latest
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.1
      
      - name : set tarraform configure
        id : tfvarupdate
        run : |
          cat terraform.tfvars
          echo -e "profile=\"\"\nprefix=\"$prefix\"\nproduct=\"$product\"\nenv=\"$env\"" > terraform.tfvars
          cat terraform.tfvars
          echo "github.event.inputs.confirm : ${{ github.event.inputs.confirm }}"
          echo "github.event.inputs.apply : ${{ github.event.inputs.apply }}"
          echo "github.run_attempt : ${{ github.run_attempt }}"
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      
      - name: Terraform Version
        id: version
        run: terraform --version
      
      - name: Terraform Init
        id: init
        run: |
          terraform init \
          -backend-config="access_key=${{ secrets.SHARED_AWS_ACESS_KEY_ID }}" \
          -backend-config="secret_key=${{ secrets.SHARED_AWS_SECRET_ACESS_KEY }}" \
          -backend-config="key=state/${{ github.ref_name }}/terraform.tfstate"
        
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file=terraform.tfvars
        # continue-on-error: true

  apply:
    if: github.run_attempt != '1'
    # if: contains(github.event.head_commit.message, '[deploy]')
    needs: plan
    runs-on: ${{ vars.RUNNER_LABEL }}
    environment: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: latest
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.1

      - name : set tarraform configure
        id : tfvarupdate
        run : |
          cat terraform.tfvars
          echo -e "profile=\"\"\nprefix=\"$prefix\"\nproduct=\"$product\"\nenv=\"$env\"" > terraform.tfvars
          cat terraform.tfvars
          echo "${{ github.event.inputs.apply }}"
          echo "github.run_attempt : ${{ github.run_attempt }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Terraform Version
        id: version
        run: terraform --version
      
      - name: Terraform Init
        id: init
        run: |
          terraform init \
          -backend-config="access_key=${{ secrets.SHARED_AWS_ACESS_KEY_ID }}" \
          -backend-config="secret_key=${{ secrets.SHARED_AWS_SECRET_ACESS_KEY }}" \
          -backend-config="key=state/${{ github.ref_name }}/terraform.tfstate"

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file=terraform.tfvars
        # continue-on-error: true

      - name: Terraform Apply
        id: apply
        run: terraform apply -var-file=terraform.tfvars -auto-approve